
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module TAROGE3(

	//////////// CLOCK //////////

	input 		          		CLOCK_50,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// GPIO, GPIO connect to GPIO Default //////////
//	input 		    [35:7]		GPIO,
//	input 		    [4]	    	GPIO,
//	input 		    [2]	    	GPIO,

//	output 		    [3]	    	GPIO,
//  output          [8]         GPIO_out,//new

//	output 		    [1]	    	GPIO,
//  output          [7]         GPIO_out,//new

//	output 		    [0]	    	GPIO,
//  output          [6]         GPIO_out,//new

	input 		    [35:0]		GPIO,

	
//	output 		    [6]		GPIO,
//	output 		    [1]		GPIO_out,//new

//	output 		    [5]		GPIO,
//  output 		    [0]		GPIO_out,//new



    output 		    [8:0]		GPIO_out,//new
	

	//////////// HSMC, HSMC connect to HSMC Default //////////
	input 		          		HSMC_CLKIN0,
	input 		          		HSMC_CLKIN_N1,
	output 		          		HSMC_CLKIN_N2,
	input 		          		HSMC_CLKIN_P1,
	input 		          		HSMC_CLKIN_P2,
	input		          		HSMC_CLKOUT0,
	input		          		HSMC_CLKOUT_N1,
	output		          		HSMC_CLKOUT_N2,
	input		          		HSMC_CLKOUT_P1,
	input		          		HSMC_CLKOUT_P2,
	input 		     [3:0]		HSMC_D,
//	input 		    [15:13]		HSMC_RX_D_N,
//	input 		    [11:0]		HSMC_RX_D_N,

	input 		    [15:0]		HSMC_RX_D_N,


//	output 		    [16]		HSMC_RX_D_N,
//    output 		    [2]		GPIO_out,//new

//	output 		    [12]		HSMC_RX_D_N,
//    output 		    [3]		GPIO_out,//new





	input 		    [16:0]		HSMC_RX_D_P,
	output		          		HSMC_SCL,
	input 		          		HSMC_SDA,

	input 		    [16:0]		HSMC_TX_D_N,


//	input 		    [16:11]		HSMC_TX_D_P,
//	input 		    [8:0]		HSMC_TX_D_P,

	input 		    [16:0]		HSMC_TX_D_P


//	output 		    [10]		HSMC_TX_D_P,
//    output 		    [4]		GPIO_out,//new

//	output 		    [9]		HSMC_TX_D_P,
//    output 		    [5]		GPIO_out,//new
);



//=======================================================
//  REG/WIRE declarations

    wire clk;


  
     wire [7:0] antennaI1V;     wire [7:0] antennaI1H;
     wire [7:0] antennaI2V;     wire [7:0] antennaI2H;
     wire [7:0] antennaI3V;     wire [7:0] antennaI3H;
     wire [7:0] antennaI4V;     wire [7:0] antennaI4H;

	  

    wire clk1muR;
    wire Tx;
    wire TxT;
    wire RxD;
    wire RxDt;	 
    wire SCL0;
    wire SCL1;

    wire SDA0;
    wire SDA1;

	wire pps;
    wire [1:0] picoscope;
//=======================================================




//=======================================================
//  Structural coding



	assign GPIO_out[5] = SDA0;



	assign GPIO_out[4] = SCL0;

//	assign HSMC_RX_D_N[12] = SDA1;
	assign GPIO_out[3] = SDA1;

	assign HSMC_CLKOUT_N2 = SCL1;



	assign pps = GPIO[2];
	assign GPIO_out[6] = picoscope[0];
	assign GPIO_out[7] = picoscope[1];
	assign RxD = GPIO[7];

//	assign GPIO[6] = Tx;
	assign GPIO_out[1] = Tx;

//	assign GPIO[5] = TxT;
	assign GPIO_out[0] = TxT;

	assign RxDt = GPIO[4];




assign antennaI4V[0] = HSMC_RX_D_P[6];//Board 8
assign antennaI4V[1] = HSMC_TX_D_P[7];
assign antennaI4V[2] = HSMC_RX_D_N[6];
assign antennaI4V[3] = HSMC_TX_D_N[7];
assign antennaI4V[4] = HSMC_RX_D_P[7];
assign antennaI4V[5] = HSMC_CLKIN_P1;
assign antennaI4V[6] = HSMC_RX_D_N[7];
assign antennaI4V[7] = HSMC_CLKIN_N1;

assign antennaI3V[0] = HSMC_RX_D_P[3];//Board 7
assign antennaI3V[1] = HSMC_RX_D_N[5];
assign antennaI3V[2] = HSMC_CLKOUT_P1;
assign antennaI3V[3] = HSMC_RX_D_P[5];
assign antennaI3V[4] = HSMC_RX_D_N[3];
assign antennaI3V[5] = HSMC_RX_D_N[4];
assign antennaI3V[6] = HSMC_CLKOUT_N1;
assign antennaI3V[7] = HSMC_RX_D_P[4];




assign antennaI2V[0] = HSMC_RX_D_P[16];//Board 6
assign antennaI2V[1] = HSMC_TX_D_N[4];
assign antennaI2V[2] = HSMC_CLKIN_P2;
assign antennaI2V[3] = HSMC_RX_D_N[2];
assign antennaI2V[4] = HSMC_RX_D_N[1];
assign antennaI2V[5] = HSMC_TX_D_P[4];
assign antennaI2V[6] = HSMC_TX_D_N[3];
assign antennaI2V[7] = HSMC_RX_D_P[2];

assign antennaI1V[0] = HSMC_TX_D_P[16];//Board 5
assign antennaI1V[1] = HSMC_RX_D_P[15];
assign antennaI1V[2] = HSMC_RX_D_N[14];
assign antennaI1V[3] = HSMC_TX_D_N[16];
assign antennaI1V[4] = HSMC_TX_D_N[15];
assign antennaI1V[5] = HSMC_RX_D_N[15];
assign antennaI1V[6] = HSMC_RX_D_P[1];
assign antennaI1V[7] = HSMC_TX_D_P[3];






assign antennaI4H[0] = HSMC_TX_D_N[14];//Board 4
assign antennaI4H[1] = HSMC_RX_D_N[13];
assign antennaI4H[2] = HSMC_RX_D_P[13];
assign antennaI4H[3] = HSMC_TX_D_P[15];
assign antennaI4H[4] = HSMC_TX_D_P[14];
assign antennaI4H[5] = HSMC_RX_D_P[14];
assign antennaI4H[6] = HSMC_RX_D_N[0];
assign antennaI4H[7] = HSMC_TX_D_N[2];

assign antennaI3H[0] = HSMC_TX_D_N[13];//Board 3
assign antennaI3H[1] = HSMC_RX_D_N[11];
assign antennaI3H[2] = HSMC_RX_D_P[11];
assign antennaI3H[3] = HSMC_CLKOUT_P2;
assign antennaI3H[4] = HSMC_TX_D_P[13];
assign antennaI3H[5] = HSMC_RX_D_P[12];
assign antennaI3H[6] = HSMC_RX_D_P[0];
assign antennaI3H[7] = HSMC_TX_D_P[2];

assign antennaI2H[0] = HSMC_TX_D_P[12];//Board 2
assign antennaI2H[1] = HSMC_RX_D_P[10];
assign antennaI2H[2] = HSMC_RX_D_N[9];
assign antennaI2H[3] = HSMC_TX_D_N[12];
assign antennaI2H[4] = HSMC_TX_D_N[11];
assign antennaI2H[5] = HSMC_RX_D_N[10];
assign antennaI2H[6] = HSMC_TX_D_N[0];
assign antennaI2H[7] = HSMC_TX_D_N[1];

assign antennaI1H[0] = HSMC_TX_D_N[9];//Board 1
assign antennaI1H[1] = HSMC_TX_D_N[10];
assign antennaI1H[2] = HSMC_TX_D_N[8];
assign antennaI1H[3] = HSMC_TX_D_P[11];
assign antennaI1H[4] = HSMC_TX_D_P[8];
assign antennaI1H[5] = HSMC_RX_D_P[9];
assign antennaI1H[6] = HSMC_TX_D_P[0];
assign antennaI1H[7] = HSMC_TX_D_P[1];
//=======================================================

assign LEDR[0] = 1'b1;

//always@(posedge CLOCK_50)
//begin
//LEDR[0] <= 1'b1;
//end



top_24bit_R2 top(
		.clk(CLOCK_50), 
		.pps(pps),
		.picoscope(picoscope),
		.antennaI1V(antennaI1V),
		.antennaI2V(antennaI2V),
		.antennaI3V(antennaI3V),
		.antennaI4V(antennaI4V),


		.antennaI1H(antennaI1H),
		.antennaI2H(antennaI2H),
		.antennaI3H(antennaI3H),
		.antennaI4H(antennaI4H),


		.clk1muR(clk1muR), 
		.Tx(Tx),
	    .TxT(TxT),	
		.RxD(RxD),
		.RxDt(RxDt),
		.SCL0(SCL0),
	    .SCL1(SCL1),

	    .SDA0(SDA0),
	    .SDA1(SDA1),

	    .testo(LEDR[5:2]),
	    .test(LEDR[1])
);

endmodule
